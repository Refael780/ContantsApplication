{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\contract\\\\contract\\\\client\\\\src\\\\components\\\\AddContactsForm.js\";\nimport React, { Fragment, useState } from 'react';\nimport NumberFormat from 'react-number-format';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst AddContactsForm = props => {\n  const [formData, setFormData] = useState({\n    Name: '',\n    Phone: '',\n    Title: ' '\n  });\n  const [dropdownOpen, setOpen] = useState(false);\n\n  const toggle = () => setOpen(!dropdownOpen);\n\n  const {\n    Name,\n    Phone,\n    Title\n  } = formData;\n\n  const onChange = e => {\n    if ([e.target.name] === 'Phone') {\n      e.target.name = e.target.validity.valid ? e.target.value : 'null';\n    } else {\n      setFormData({ ...formData,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n\n  const loginHandler = async e => {\n    e.preventDefault(); ///if some of the input is wrong we alert to user\n    ///TO-DO\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"new-contact-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    onChange: e => onChange(e),\n    required: true,\n    name: \"Name\",\n    type: \"text\",\n    value: Name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"new-contact-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(\"input\", {\n    onChange: e => onChange(e),\n    required: true,\n    name: \"Phone\",\n    value: Phone,\n    type: \"text\",\n    pattern: \"[0-9]*\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"new-contact-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"input\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))));\n};\n\nexport default AddContactsForm;","map":{"version":3,"sources":["C:/React/contract/contract/client/src/components/AddContactsForm.js"],"names":["React","Fragment","useState","NumberFormat","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","AddContactsForm","props","formData","setFormData","Name","Phone","Title","dropdownOpen","setOpen","toggle","onChange","e","target","name","validity","valid","value","loginHandler","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,YAJF,QAKO,YALP;AAMA,OAAO,kCAAP;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,KAAK,EAAE;AAHgC,GAAD,CAAxC;AAKA,QAAM,CAACC,YAAD,EAAeC,OAAf,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMe,MAAM,GAAG,MAAMD,OAAO,CAAC,CAACD,YAAF,CAA5B;;AAEA,QAAM;AAAEH,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAAyBJ,QAA/B;;AACA,QAAMQ,QAAQ,GAAGC,CAAC,IAAI;AACpB,QAAI,CAACA,CAAC,CAACC,MAAF,CAASC,IAAV,MAAoB,OAAxB,EAAiC;AAC/BF,MAAAA,CAAC,CAACC,MAAF,CAASC,IAAT,GAAgBF,CAAC,CAACC,MAAF,CAASE,QAAT,CAAkBC,KAAlB,GAA0BJ,CAAC,CAACC,MAAF,CAASI,KAAnC,GAA2C,MAA3D;AACD,KAFD,MAEO;AACLb,MAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,SAACS,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASI;AAAzC,OAAD,CAAX;AACD;AACF,GAND;;AAOA,QAAMC,YAAY,GAAG,MAAMN,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACO,cAAF,GAD8B,CAE9B;AACA;AACD,GAJD;;AAKA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AACE,IAAA,QAAQ,EAAEP,CAAC,IAAID,QAAQ,CAACC,CAAD,CADzB;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,KAAK,EAAEP,IALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAWE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAGE;AACE,IAAA,QAAQ,EAAEO,CAAC,IAAID,QAAQ,CAACC,CAAD,CADzB;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEN,KAJT;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,OAAO,EAAC,QANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAXF,EAuBE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAvBF,CADF,CADF;AAgCD,CAvDD;;AAyDA,eAAeL,eAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport {\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst AddContactsForm = props => {\r\n  const [formData, setFormData] = useState({\r\n    Name: '',\r\n    Phone: '',\r\n    Title: ' '\r\n  });\r\n  const [dropdownOpen, setOpen] = useState(false);\r\n\r\n  const toggle = () => setOpen(!dropdownOpen);\r\n\r\n  const { Name, Phone, Title } = formData;\r\n  const onChange = e => {\r\n    if ([e.target.name] === 'Phone') {\r\n      e.target.name = e.target.validity.valid ? e.target.value : 'null';\r\n    } else {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const loginHandler = async e => {\r\n    e.preventDefault();\r\n    ///if some of the input is wrong we alert to user\r\n    ///TO-DO\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <form>\r\n        <div className='new-contact-input'>\r\n          <label>Name</label>\r\n          <input\r\n            onChange={e => onChange(e)}\r\n            required\r\n            name='Name'\r\n            type='text'\r\n            value={Name}\r\n          />\r\n        </div>\r\n        <div className='new-contact-input'>\r\n          <label>Phone</label>\r\n\r\n          <input\r\n            onChange={e => onChange(e)}\r\n            required\r\n            name='Phone'\r\n            value={Phone}\r\n            type='text'\r\n            pattern='[0-9]*'\r\n          />\r\n        </div>\r\n        <div className='new-contact-input'>\r\n          <label>Title</label>\r\n          <input />\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddContactsForm;\r\n"]},"metadata":{},"sourceType":"module"}