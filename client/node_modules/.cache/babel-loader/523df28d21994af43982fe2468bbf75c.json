{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\contract\\\\contract\\\\client\\\\src\\\\pages\\\\contract\\\\Contact.js\";\nimport React, { Component, Fragment } from 'react';\nimport { getAllContact } from '../../action/contact';\nimport ShowContact from '../../components/ShowContact';\nimport { connect } from 'react-redux';\nimport LoadingSpinner from '../../Layout/LoadingSpinner/LoadingSpinner';\nimport { Redirect } from 'react-router-dom';\nimport './Contact.css';\n\nclass Contact extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: '',\n      isRedirect: false\n    };\n\n    this.componentDidMount = async () => {\n      await this.props.getAllContact();\n    };\n\n    this.randomContectClickHandler = e => {};\n  }\n\n  render() {\n    return this.props.isLoading ? React.createElement(LoadingSpinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contact-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"search in contacts...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"search-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"contacts-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(ShowContact, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"contact-new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-user-plus\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: e => this.randomContectClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-random\",\n      \"aria-hidden\": \"true\",\n      style: {\n        marginLeft: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.contactMangment.loading\n});\n\nexport default connect(mapStateToProps, {\n  getAllContact\n})(Contact);","map":{"version":3,"sources":["C:/React/contract/contract/client/src/pages/contract/Contact.js"],"names":["React","Component","Fragment","getAllContact","ShowContact","connect","LoadingSpinner","Redirect","Contact","state","loading","isRedirect","componentDidMount","props","randomContectClickHandler","e","render","isLoading","marginLeft","mapStateToProps","contactMangment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAO,eAAP;;AACA,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BQ,KAD8B,GACtB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,UAAU,EAAE;AAFN,KADsB;;AAAA,SAK9BC,iBAL8B,GAKV,YAAY;AAC9B,YAAM,KAAKC,KAAL,CAAWV,aAAX,EAAN;AACD,KAP6B;;AAAA,SAQ9BW,yBAR8B,GAQFC,CAAC,IAAI,CAAE,CARL;AAAA;;AAS9BC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKH,KAAL,CAAWI,SAAX,GACL,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,GAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,uBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,cAAb;AAA4B,qBAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF,EAOE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,EAUE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAA+B,qBAAY,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAQ,MAAA,OAAO,EAAEF,CAAC,IAAI,KAAKD,yBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,qBAAY,MAFd;AAGE,MAAA,KAAK,EAAE;AAAEI,QAAAA,UAAU,EAAE;AAAd,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CAVF,CADF,CADF,CAHF;AA+BD;;AAzC6B;;AA2ChC,MAAMC,eAAe,GAAGV,KAAK,KAAK;AAChCQ,EAAAA,SAAS,EAAER,KAAK,CAACW,eAAN,CAAsBV;AADD,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACc,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA4CK,OAA5C,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { getAllContact } from '../../action/contact';\r\nimport ShowContact from '../../components/ShowContact';\r\nimport { connect } from 'react-redux';\r\nimport LoadingSpinner from '../../Layout/LoadingSpinner/LoadingSpinner';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport './Contact.css';\r\nclass Contact extends Component {\r\n  state = {\r\n    loading: '',\r\n    isRedirect: false\r\n  };\r\n  componentDidMount = async () => {\r\n    await this.props.getAllContact();\r\n  };\r\n  randomContectClickHandler = e => {};\r\n  render() {\r\n    return this.props.isLoading ? (\r\n      <LoadingSpinner></LoadingSpinner>\r\n    ) : (\r\n      <Fragment>\r\n        <div className='body'>\r\n          <div className='contact-container'>\r\n            <div className='search-input'>\r\n              <input type='text' placeholder='search in contacts...' />\r\n              <div className='search-icon'>\r\n                <i className='fa fa-search' aria-hidden='true'></i>\r\n              </div>\r\n            </div>\r\n            <div className='contacts-container'>\r\n              <ShowContact />\r\n            </div>\r\n            <div className='contact-new'>\r\n              <button>\r\n                <i className='fa fa-user-plus' aria-hidden='true'></i>\r\n              </button>\r\n              <button onClick={e => this.randomContectClickHandler}>\r\n                <i\r\n                  className='fa fa-random'\r\n                  aria-hidden='true'\r\n                  style={{ marginLeft: '15px' }}\r\n                ></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.contactMangment.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllContact })(Contact);\r\n"]},"metadata":{},"sourceType":"module"}