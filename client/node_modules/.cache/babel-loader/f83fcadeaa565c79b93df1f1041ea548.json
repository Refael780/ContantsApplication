{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\contract\\\\contract\\\\client\\\\src\\\\components\\\\Imgrandom.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport LoadingSpinner from '../Layout/LoadingSpinner/LoadingSpinner'; // this Fcomponent show random  avatar\n\nconst Imgrandom = props => {\n  let src = props.Customimg;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: src,\n    alt: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  imgUrl: state.setImage.imgUrl,\n  isLoading: state.setImage.isLoading\n});\n\nexport default connect(mapStateToProps, null)(Imgrandom);","map":{"version":3,"sources":["C:/React/contract/contract/client/src/components/Imgrandom.js"],"names":["React","Fragment","connect","LoadingSpinner","Imgrandom","props","src","Customimg","mapStateToProps","state","imgUrl","setImage","isLoading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,yCAA3B,C,CAEA;;AACA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,MAAIC,GAAG,GAAGD,KAAK,CAACE,SAAhB;AACA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAED,GAAV;AAAe,IAAA,GAAG,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAPD;;AASA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,MAAM,EAAED,KAAK,CAACE,QAAN,CAAeD,MADS;AAEhCE,EAAAA,SAAS,EAAEH,KAAK,CAACE,QAAN,CAAeC;AAFM,CAAL,CAA7B;;AAIA,eAAeV,OAAO,CAACM,eAAD,EAAkB,IAAlB,CAAP,CAA+BJ,SAA/B,CAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LoadingSpinner from '../Layout/LoadingSpinner/LoadingSpinner';\r\n\r\n// this Fcomponent show random  avatar\r\nconst Imgrandom = props => {\r\n  let src = props.Customimg;\r\n  return (\r\n    <Fragment>\r\n      <img src={src} alt='avatar' />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  imgUrl: state.setImage.imgUrl,\r\n  isLoading: state.setImage.isLoading\r\n});\r\nexport default connect(mapStateToProps, null)(Imgrandom);\r\n"]},"metadata":{},"sourceType":"module"}