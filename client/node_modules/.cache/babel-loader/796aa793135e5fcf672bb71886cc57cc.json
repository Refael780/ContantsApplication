{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\contract\\\\contract\\\\client\\\\src\\\\components\\\\AddContactsForm.js\";\nimport React, { Fragment, useState } from 'react';\nimport PhoneInput from 'react-phone-number-input';\n\nconst AddContactsForm = props => {\n  const [formData, setFormData] = useState({\n    Name: '',\n    Phone: '',\n    Title: ' '\n  });\n  const {\n    Name,\n    Phone,\n    Title\n  } = formData;\n\n  const onChange = e => {\n    if ([e.target.name] === 'Phone') {\n      if (e.target !== typeof Number) {\n        return;\n      } else {\n        setFormData({ ...formData,\n          [e.target.name]: e.target.value\n        });\n      }\n    } else {\n      setFormData({ ...formData,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n\n  const loginHandler = async e => {\n    e.preventDefault(); ///if some of the input is wrong we alert to user\n    ///TO-DO\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"new-contact-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    onChange: e => onChange(e),\n    required: true,\n    name: \"Name\",\n    type: \"text\",\n    value: Name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"new-contact-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(\"input\", {\n    onChange: e => onChange(e),\n    required: true,\n    name: \"Phone\",\n    value: Phone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"new-contact-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"input\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))));\n};\n\nexport default AddContactsForm;","map":{"version":3,"sources":["C:/React/contract/contract/client/src/components/AddContactsForm.js"],"names":["React","Fragment","useState","PhoneInput","AddContactsForm","props","formData","setFormData","Name","Phone","Title","onChange","e","target","name","Number","value","loginHandler","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AACvCM,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,KAAK,EAAE;AAHgC,GAAD,CAAxC;AAMA,QAAM;AAAEF,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAAyBJ,QAA/B;;AACA,QAAMK,QAAQ,GAAGC,CAAC,IAAI;AACpB,QAAI,CAACA,CAAC,CAACC,MAAF,CAASC,IAAV,MAAoB,OAAxB,EAAiC;AAC/B,UAAIF,CAAC,CAACC,MAAF,KAAa,OAAOE,MAAxB,EAAgC;AAC9B;AACD,OAFD,MAEO;AACLR,QAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,WAACM,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASG;AAAzC,SAAD,CAAX;AACD;AACF,KAND,MAMO;AACLT,MAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,SAACM,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASG;AAAzC,OAAD,CAAX;AACD;AACF,GAVD;;AAWA,QAAMC,YAAY,GAAG,MAAML,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACM,cAAF,GAD8B,CAE9B;AACA;AACD,GAJD;;AAKA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AACE,IAAA,QAAQ,EAAEN,CAAC,IAAID,QAAQ,CAACC,CAAD,CADzB;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,KAAK,EAAEJ,IALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAWE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AACE,IAAA,QAAQ,EAAEI,CAAC,IAAID,QAAQ,CAACC,CAAD,CADzB;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEH,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,EAoBE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CApBF,CADF,CADF;AA6BD,CArDD;;AAuDA,eAAeL,eAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport PhoneInput from 'react-phone-number-input';\r\n\r\nconst AddContactsForm = props => {\r\n  const [formData, setFormData] = useState({\r\n    Name: '',\r\n    Phone: '',\r\n    Title: ' '\r\n  });\r\n\r\n  const { Name, Phone, Title } = formData;\r\n  const onChange = e => {\r\n    if ([e.target.name] === 'Phone') {\r\n      if (e.target !== typeof Number) {\r\n        return;\r\n      } else {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n      }\r\n    } else {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const loginHandler = async e => {\r\n    e.preventDefault();\r\n    ///if some of the input is wrong we alert to user\r\n    ///TO-DO\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <form>\r\n        <div className='new-contact-input'>\r\n          <label>Name</label>\r\n          <input\r\n            onChange={e => onChange(e)}\r\n            required\r\n            name='Name'\r\n            type='text'\r\n            value={Name}\r\n          />\r\n        </div>\r\n        <div className='new-contact-input'>\r\n          <label>Phone</label>\r\n          <input\r\n            onChange={e => onChange(e)}\r\n            required\r\n            name='Phone'\r\n            value={Phone}\r\n          />\r\n        </div>\r\n        <div className='new-contact-input'>\r\n          <label>Title</label>\r\n          <input />\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddContactsForm;\r\n"]},"metadata":{},"sourceType":"module"}