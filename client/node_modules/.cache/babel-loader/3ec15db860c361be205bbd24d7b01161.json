{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\contract\\\\contract\\\\client\\\\src\\\\components\\\\AddContactsForm.js\";\nimport React, { Fragment, useState } from 'react';\nimport NumberFormat from 'react-number-format';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Alert } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst AddContactsForm = props => {\n  const [formData, setFormData] = useState({\n    Name: {\n      value: 'Name',\n      validation: {\n        required: true,\n        maxLength: 30\n      }\n    },\n    Phone: {\n      value: 'Phone',\n      validation: {\n        required: true,\n        isNumber: true,\n        phonFormat: true\n      }\n    },\n    Title: {\n      value: '',\n      required: true\n    }\n  });\n  const [dropdownOpen, setOpen] = useState(false);\n\n  const toggle = () => setOpen(!dropdownOpen);\n\n  const {\n    Name,\n    Phone,\n    Title,\n    validation\n  } = formData;\n\n  const onChange = e => {\n    console.log(e.currentTarget.name);\n    console.log(formData[[e.currentTarget.name]]); //  console.log(formData.e.target.name);\n\n    console.log(formData[e.target.name]);\n    console.log({ ...formData\n    }['e.currentTarget.name']);\n    console.log(e.target.name['validation']);\n    console.log({ ...e.target.name['validation']\n    }); // console.log([e.target.name]);\n\n    [e.target.name].valid = checkValidity(e.target.value, { ...e.target.validation\n    });\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const checkValidity = (value, rules) => {\n    let isValid = true;\n    console.log('ENTER TO FUNC');\n    console.log(rules);\n\n    if (rules.required) {\n      console.log('empty');\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      console.log('leng');\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    return isValid;\n  };\n\n  const loginHandler = async e => {\n    e.preventDefault(); ///if some of the input is wrong we alert to user\n    ///TO-DO\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"new-contact-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    onChange: e => onChange(e),\n    required: true,\n    name: \"Name\",\n    type: \"text\",\n    value: Name.value,\n    valid: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"new-contact-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(\"input\", {\n    onChange: e => onChange(e),\n    required: true,\n    name: \"Phone\",\n    value: Phone.value,\n    type: \"text\",\n    valid: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"new-contact-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"input\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }))));\n};\n\nexport default AddContactsForm;","map":{"version":3,"sources":["C:/React/contract/contract/client/src/components/AddContactsForm.js"],"names":["React","Fragment","useState","NumberFormat","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","Alert","AddContactsForm","props","formData","setFormData","Name","value","validation","required","maxLength","Phone","isNumber","phonFormat","Title","dropdownOpen","setOpen","toggle","onChange","e","console","log","currentTarget","name","target","valid","checkValidity","rules","isValid","trim","minLength","length","loginHandler","preventDefault"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport {\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Alert\r\n} from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst AddContactsForm = props => {\r\n  const [formData, setFormData] = useState({\r\n    Name: {\r\n      value: 'Name',\r\n      validation: {\r\n        required: true,\r\n        maxLength: 30\r\n      }\r\n    },\r\n    Phone: {\r\n      value: 'Phone',\r\n      validation: {\r\n        required: true,\r\n        isNumber: true,\r\n        phonFormat: true\r\n      }\r\n    },\r\n    Title: {\r\n      value: '',\r\n      required: true\r\n    }\r\n  });\r\n  const [dropdownOpen, setOpen] = useState(false);\r\n\r\n  const toggle = () => setOpen(!dropdownOpen);\r\n\r\n  const { Name, Phone, Title, validation } = formData;\r\n  const onChange = e => {\r\n    console.log(e.currentTarget.name);\r\n    console.log(formData[[e.currentTarget.name]]);\r\n\r\n    //  console.log(formData.e.target.name);\r\n    console.log(formData[e.target.name]);\r\n    console.log({ ...formData }['e.currentTarget.name']);\r\n\r\n    console.log(e.target.name['validation']);\r\n    console.log({ ...e.target.name['validation'] });\r\n\r\n    // console.log([e.target.name]);\r\n    [e.target.name].valid = checkValidity(e.target.value, {\r\n      ...e.target.validation\r\n    });\r\n\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    console.log('ENTER TO FUNC');\r\n    console.log(rules);\r\n\r\n    if (rules.required) {\r\n      console.log('empty');\r\n\r\n      isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n      console.log('leng');\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n  const loginHandler = async e => {\r\n    e.preventDefault();\r\n    ///if some of the input is wrong we alert to user\r\n    ///TO-DO\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form>\r\n        <div className='new-contact-input'>\r\n          <label>Name</label>\r\n          <input\r\n            onChange={e => onChange(e)}\r\n            required\r\n            name='Name'\r\n            type='text'\r\n            value={Name.value}\r\n            valid={false}\r\n          />\r\n        </div>\r\n        <div className='new-contact-input'>\r\n          <label>Phone</label>\r\n\r\n          <input\r\n            onChange={e => onChange(e)}\r\n            required\r\n            name='Phone'\r\n            value={Phone.value}\r\n            type='text'\r\n            valid={false}\r\n          />\r\n        </div>\r\n        <div className='new-contact-input'>\r\n          <label>Title</label>\r\n          <input />\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddContactsForm;\r\n"]},"metadata":{},"sourceType":"module"}