{"ast":null,"code":"import { GET_CONTACT, GET_ALL_CONTACT, REMOVE_CONTACT, SET_CONTACT, SET_CONTACT_ERROR, GET_ALL_CONTACT_ERROR } from '../action/type';\nconst initialState = {\n  contact: null,\n  contacts: [],\n  loading: true,\n  error: {}\n};\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case SET_CONTACT:\n      return { ...state,\n        contact: payload\n      };\n\n    case GET_ALL_CONTACT_ERROR:\n    case SET_CONTACT_ERROR:\n      return { ...state,\n        error: payload,\n        contact: null,\n        loading: false\n      };\n\n    case GET_ALL_CONTACT:\n      return { ...state,\n        contacts: payload,\n        loading: false\n      };\n\n    case REMOVE_CONTACT:\n      let con = [];\n      console.log(state.contacts);\n      con = state.contacts.filter(el => el.id !== payload);\n      console.log(con);\n      return { ...state,\n        contacts: con,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/React/contract/contract/client/src/reducers/contactMangment.js"],"names":["GET_CONTACT","GET_ALL_CONTACT","REMOVE_CONTACT","SET_CONTACT","SET_CONTACT_ERROR","GET_ALL_CONTACT_ERROR","initialState","contact","contacts","loading","error","state","action","type","payload","con","console","log","filter","el","id"],"mappings":"AAAA,SACEA,WADF,EAEEC,eAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,iBALF,EAMEC,qBANF,QAOO,gBAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKV,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,OAAO,EAAEO;AAFJ,OAAP;;AAIF,SAAKT,qBAAL;AACA,SAAKD,iBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLP,QAAAA,OAAO,EAAE,IAHJ;AAILE,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKR,eAAL;AACE,aAAO,EACL,GAAGU,KADE;AAGLH,QAAAA,QAAQ,EAAEM,OAHL;AAILL,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKP,cAAL;AACE,UAAIa,GAAG,GAAG,EAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACH,QAAlB;AAEAO,MAAAA,GAAG,GAAGJ,KAAK,CAACH,QAAN,CAAeU,MAAf,CAAsBC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUN,OAAtC,CAAN;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEA,aAAO,EACL,GAAGJ,KADE;AAELH,QAAAA,QAAQ,EAAEO,GAFL;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF;AACE,aAAOE,KAAP;AAnCJ;AAqCD,CAvCD","sourcesContent":["import {\r\n  GET_CONTACT,\r\n  GET_ALL_CONTACT,\r\n  REMOVE_CONTACT,\r\n  SET_CONTACT,\r\n  SET_CONTACT_ERROR,\r\n  GET_ALL_CONTACT_ERROR\r\n} from '../action/type';\r\n\r\nconst initialState = {\r\n  contact: null,\r\n  contacts: [],\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_CONTACT:\r\n      return {\r\n        ...state,\r\n        contact: payload\r\n      };\r\n    case GET_ALL_CONTACT_ERROR:\r\n    case SET_CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        contact: null,\r\n        loading: false\r\n      };\r\n    case GET_ALL_CONTACT:\r\n      return {\r\n        ...state,\r\n\r\n        contacts: payload,\r\n        loading: false\r\n      };\r\n    case REMOVE_CONTACT:\r\n      let con = [];\r\n      console.log(state.contacts);\r\n\r\n      con = state.contacts.filter(el => el.id !== payload);\r\n      console.log(con);\r\n\r\n      return {\r\n        ...state,\r\n        contacts: con,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}