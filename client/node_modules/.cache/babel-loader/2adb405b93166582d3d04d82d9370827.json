{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\contract\\\\contract\\\\client\\\\src\\\\pages\\\\contract\\\\Contact.js\";\nimport React, { Component, Fragment } from 'react';\nimport { getAllContact } from '../../action/contact';\nimport ShowContact from '../../components/ShowContact';\nimport { connect } from 'react-redux';\nimport LoadingSpinner from '../../Layout/LoadingSpinner/LoadingSpinner';\nimport { Redirect } from 'react-router-dom';\nimport './Contact.css';\n\nclass Contact extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: '',\n      isRedirect: false\n    };\n\n    this.componentDidMount = async () => {\n      await this.props.getAllContact();\n    };\n\n    this.redirectToAddhandler = e => {\n      console.log('HERE');\n      this.setState({ ...this.state,\n        isRedirect: true\n      });\n    };\n\n    this.serchHandler = e => {\n      if (typeof e.currentTarget.value[0] === 'string') {\n        let con = props.contacts.filter(suggestion => suggestion.toLowerCase().indexOf(e.currentTarget.value.toLowerCase()) > -1);\n        console.log(con);\n      }\n    };\n\n    this.randomContectClickHandler = e => {};\n  }\n\n  render() {\n    return this.props.isLoading ? React.createElement(LoadingSpinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }) : this.state.isRedirect ? React.createElement(Redirect, {\n      to: \"/contatcs/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contact-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: e => this.serchHandler(e),\n      type: \"text\",\n      name: \"userInput\",\n      placeholder: \"search in contacts...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"search-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"contacts-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(ShowContact, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"contact-new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      onClick: e => this.redirectToAddhandler(e),\n      className: \"fa fa-user-plus\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: e => this.randomContectClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-random\",\n      \"aria-hidden\": \"true\",\n      style: {\n        marginLeft: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.contactMangment.loading,\n  contacts: state.contactMangment.contacts\n});\n\nexport default connect(mapStateToProps, {\n  getAllContact\n})(Contact);","map":{"version":3,"sources":["C:/React/contract/contract/client/src/pages/contract/Contact.js"],"names":["React","Component","Fragment","getAllContact","ShowContact","connect","LoadingSpinner","Redirect","Contact","state","loading","isRedirect","componentDidMount","props","redirectToAddhandler","e","console","log","setState","serchHandler","currentTarget","value","con","contacts","filter","suggestion","toLowerCase","indexOf","randomContectClickHandler","render","isLoading","marginLeft","mapStateToProps","contactMangment"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { getAllContact } from '../../action/contact';\r\nimport ShowContact from '../../components/ShowContact';\r\nimport { connect } from 'react-redux';\r\nimport LoadingSpinner from '../../Layout/LoadingSpinner/LoadingSpinner';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport './Contact.css';\r\nclass Contact extends Component {\r\n  state = {\r\n    loading: '',\r\n    isRedirect: false\r\n  };\r\n  componentDidMount = async () => {\r\n    await this.props.getAllContact();\r\n  };\r\n  redirectToAddhandler = e => {\r\n    console.log('HERE');\r\n\r\n    this.setState({ ...this.state, isRedirect: true });\r\n  };\r\n  serchHandler = e => {\r\n    if (typeof e.currentTarget.value[0] === 'string') {\r\n      let con = props.contacts.filter(\r\n        suggestion =>\r\n          suggestion\r\n            .toLowerCase()\r\n            .indexOf(e.currentTarget.value.toLowerCase()) > -1\r\n      );\r\n\r\n      console.log(con);\r\n    }\r\n  };\r\n  randomContectClickHandler = e => {};\r\n\r\n  render() {\r\n    return this.props.isLoading ? (\r\n      <LoadingSpinner></LoadingSpinner>\r\n    ) : this.state.isRedirect ? (\r\n      <Redirect to='/contatcs/new' />\r\n    ) : (\r\n      <Fragment>\r\n        <div className='body'>\r\n          <div className='contact-container'>\r\n            <div className='search-input'>\r\n              <input\r\n                onChange={e => this.serchHandler(e)}\r\n                type='text'\r\n                name='userInput'\r\n                placeholder='search in contacts...'\r\n              />\r\n              <div className='search-icon'>\r\n                <i className='fa fa-search' aria-hidden='true'></i>\r\n              </div>\r\n            </div>\r\n            <div className='contacts-container'>\r\n              <ShowContact />\r\n            </div>\r\n            <div className='contact-new'>\r\n              <button>\r\n                <i\r\n                  onClick={e => this.redirectToAddhandler(e)}\r\n                  className='fa fa-user-plus'\r\n                  aria-hidden='true'\r\n                ></i>\r\n              </button>\r\n              <button onClick={e => this.randomContectClickHandler}>\r\n                <i\r\n                  className='fa fa-random'\r\n                  aria-hidden='true'\r\n                  style={{ marginLeft: '15px' }}\r\n                ></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.contactMangment.loading,\r\n  contacts: state.contactMangment.contacts\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllContact })(Contact);\r\n"]},"metadata":{},"sourceType":"module"}