{"ast":null,"code":"import { GET_CONTACT, GET_ALL_CONTACT, REMOVE_CONTACT, SET_CONTACT, SET_CONTACT_ERROR, GET_ALL_CONTACT_ERROR, FILLTER_CONTACT, UPDATE_CONTACT } from './type';\nimport axios from 'axios';\nexport const updateContact = (id, Name, Phone, Title, imgUrl) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      Name,\n      Phone,\n      Title,\n      imgUrl\n    });\n    const res = await axios.put(`/api/contacts/${id}`, body, config);\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_CONTACT_ERROR\n    });\n  }\n};\nexport const removeContact = id => async dispatch => {\n  try {\n    await axios.delete(`/api/contacts/${id}`);\n    dispatch({\n      type: REMOVE_CONTACT,\n      payload: id\n    });\n  } catch (error) {}\n};\nexport const filterContent = con => dispatch => {\n  dispatch({\n    type: FILLTER_CONTACT,\n    payload: con\n  });\n};\nexport const getContent = id => async dispatch => {\n  dispatch({\n    type: GET_CONTACT,\n    payload: id\n  });\n};\nexport const getAllContact = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/contacts');\n    dispatch({\n      type: GET_ALL_CONTACT,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: GET_ALL_CONTACT_ERROR,\n      payload: error\n    });\n  }\n};\nexport const setContact = (Name, Phone, Title, imgUrl) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      Name,\n      Phone,\n      Title,\n      imgUrl\n    });\n    console.log('BODY');\n    console.log(body);\n    const res = await axios.post('/api/contacts', body, config);\n    dispatch({\n      type: SET_CONTACT,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: SET_CONTACT_ERROR,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/React/contract/contract/client/src/action/contact.js"],"names":["GET_CONTACT","GET_ALL_CONTACT","REMOVE_CONTACT","SET_CONTACT","SET_CONTACT_ERROR","GET_ALL_CONTACT_ERROR","FILLTER_CONTACT","UPDATE_CONTACT","axios","updateContact","id","Name","Phone","Title","imgUrl","dispatch","config","headers","body","JSON","stringify","res","put","type","payload","data","error","removeContact","delete","filterContent","con","getContent","getAllContact","get","console","log","setContact","post"],"mappings":"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","sourcesContent":["import {\r\n  GET_CONTACT,\r\n  GET_ALL_CONTACT,\r\n  REMOVE_CONTACT,\r\n  SET_CONTACT,\r\n  SET_CONTACT_ERROR,\r\n  GET_ALL_CONTACT_ERROR,\r\n  FILLTER_CONTACT,\r\n  UPDATE_CONTACT\r\n} from './type';\r\nimport axios from 'axios';\r\nexport const updateContact = (\r\n  id,\r\n  Name,\r\n  Phone,\r\n  Title,\r\n  imgUrl\r\n) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const body = JSON.stringify({ Name, Phone, Title, imgUrl });\r\n    const res = await axios.put(`/api/contacts/${id}`, body, config);\r\n    dispatch({\r\n      type: UPDATE_CONTACT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SET_CONTACT_ERROR\r\n    });\r\n  }\r\n};\r\nexport const removeContact = id => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/contacts/${id}`);\r\n    dispatch({\r\n      type: REMOVE_CONTACT,\r\n      payload: id\r\n    });\r\n  } catch (error) {}\r\n};\r\nexport const filterContent = con => dispatch => {\r\n  dispatch({\r\n    type: FILLTER_CONTACT,\r\n    payload: con\r\n  });\r\n};\r\n\r\nexport const getContent = id => async dispatch => {\r\n  dispatch({\r\n    type: GET_CONTACT,\r\n    payload: id\r\n  });\r\n};\r\nexport const getAllContact = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/contacts');\r\n    dispatch({\r\n      type: GET_ALL_CONTACT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n\r\n    dispatch({\r\n      type: GET_ALL_CONTACT_ERROR,\r\n      payload: error\r\n    });\r\n  }\r\n};\r\nexport const setContact = (Name, Phone, Title, imgUrl) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    const body = JSON.stringify({ Name, Phone, Title, imgUrl });\r\n\r\n    console.log('BODY');\r\n    console.log(body);\r\n\r\n    const res = await axios.post('/api/contacts', body, config);\r\n\r\n    dispatch({\r\n      type: SET_CONTACT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SET_CONTACT_ERROR,\r\n      payload: error\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}