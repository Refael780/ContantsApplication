{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\contract\\\\contract\\\\client\\\\src\\\\components\\\\AddContactsForm.js\";\nimport React, { Fragment, useState } from 'react';\nimport NumberFormat from 'react-number-format';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Alert } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst AddContactsForm = props => {\n  const [formData, setFormData] = useState({\n    Name: '',\n    Phone: '',\n    Title: ' '\n  });\n  const [dropdownOpen, setOpen] = useState(false);\n\n  const toggle = () => setOpen(!dropdownOpen);\n\n  const {\n    Name,\n    Phone,\n    Title\n  } = formData;\n\n  const onChange = e => {\n    console.log([e.target.name]);\n    [e.target.name].valid = checkValidity({ ...[e.target.name].validation\n    }, e.target.value);\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const checkValidity = (value, rules) => {\n    let isValid = true;\n    console.log('ENTER TO FUNC');\n    console.log(value + rules);\n\n    if (rules.required) {\n      console.log('empty');\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      console.log('leng');\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    return isValid;\n  };\n\n  const loginHandler = async e => {\n    e.preventDefault(); ///if some of the input is wrong we alert to user\n    ///TO-DO\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"new-contact-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    onChange: e => onChange(e),\n    required: true,\n    name: \"Name\",\n    type: \"text\",\n    value: Name,\n    valid: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"new-contact-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(\"input\", {\n    onChange: e => onChange(e),\n    required: true,\n    name: \"Phone\",\n    value: Phone,\n    type: \"text\",\n    validation: {\n      required: true,\n      minLength: 3\n    },\n    valid: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"new-contact-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"input\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))));\n};\n\nexport default AddContactsForm;","map":{"version":3,"sources":["C:/React/contract/contract/client/src/components/AddContactsForm.js"],"names":["React","Fragment","useState","NumberFormat","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","Alert","AddContactsForm","props","formData","setFormData","Name","Phone","Title","dropdownOpen","setOpen","toggle","onChange","e","console","log","target","name","valid","checkValidity","validation","value","rules","isValid","required","trim","minLength","length","maxLength","loginHandler","preventDefault"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport {\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Alert\r\n} from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst AddContactsForm = props => {\r\n  const [formData, setFormData] = useState({\r\n    Name: '',\r\n    Phone: '',\r\n    Title: ' '\r\n  });\r\n  const [dropdownOpen, setOpen] = useState(false);\r\n\r\n  const toggle = () => setOpen(!dropdownOpen);\r\n\r\n  const { Name, Phone, Title } = formData;\r\n  const onChange = e => {\r\n    console.log([e.target.name]);\r\n\r\n    [e.target.name].valid = checkValidity(\r\n      { ...[e.target.name].validation },\r\n      e.target.value\r\n    );\r\n\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    console.log('ENTER TO FUNC');\r\n    console.log(value + rules);\r\n\r\n    if (rules.required) {\r\n      console.log('empty');\r\n\r\n      isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n      console.log('leng');\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n  const loginHandler = async e => {\r\n    e.preventDefault();\r\n    ///if some of the input is wrong we alert to user\r\n    ///TO-DO\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form>\r\n        <div className='new-contact-input'>\r\n          <label>Name</label>\r\n          <input\r\n            onChange={e => onChange(e)}\r\n            required\r\n            name='Name'\r\n            type='text'\r\n            value={Name}\r\n            valid={false}\r\n          />\r\n        </div>\r\n        <div className='new-contact-input'>\r\n          <label>Phone</label>\r\n\r\n          <input\r\n            onChange={e => onChange(e)}\r\n            required\r\n            name='Phone'\r\n            value={Phone}\r\n            type='text'\r\n            validation={{ required: true, minLength: 3 }}\r\n            valid={false}\r\n          />\r\n        </div>\r\n        <div className='new-contact-input'>\r\n          <label>Title</label>\r\n          <input />\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddContactsForm;\r\n"]},"metadata":{},"sourceType":"module"}